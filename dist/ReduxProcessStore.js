"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReduxProcessStore = void 0;
const redux_thunk_1 = __importDefault(require("redux-thunk"));
const redux_1 = require("redux");
class ReduxProcessStore {
    constructor(middlewares = []) {
        this.processes = {};
        const middleware = redux_1.applyMiddleware(redux_thunk_1.default, ...middlewares);
        this._internalReducer = this._internalReducer.bind(this);
        this.store = redux_1.createStore(this._internalReducer, middleware);
    }
    addProcessGroup(processGroup) {
        this.processes[processGroup.groupName] = processGroup.getReducer();
        this._updateReducer();
        return this;
    }
    removeProcessGroup(processGroup) {
        delete this.processes[processGroup.groupName];
        this._updateReducer();
        return this;
    }
    _updateReducer() {
        const newReducer = redux_1.combineReducers(this.processes);
        this.store.replaceReducer(newReducer);
    }
    _internalReducer(state = {}) {
        return state;
    }
    getStore() {
        return this.store;
    }
}
exports.ReduxProcessStore = ReduxProcessStore;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVkdXhQcm9jZXNzU3RvcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVkdXhQcm9jZXNzU3RvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsOERBQStCO0FBQy9CLGlDQU1jO0FBS2QsTUFBYSxpQkFBaUI7SUFPNUIsWUFBWSxjQUFxQixFQUFFO1FBTHpCLGNBQVMsR0FHZixFQUFFLENBQUE7UUFHSixNQUFNLFVBQVUsR0FBRyx1QkFBZSxDQUFDLHFCQUFLLEVBQUUsR0FBRyxXQUFXLENBQUMsQ0FBQTtRQUN6RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUN4RCxJQUFJLENBQUMsS0FBSyxHQUFHLG1CQUFXLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxDQUFBO0lBQzdELENBQUM7SUFFRCxlQUFlLENBQUMsWUFBMEM7UUFDeEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsWUFBWSxDQUFDLFVBQVUsRUFBRSxDQUFBO1FBQ2xFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTtRQUNyQixPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxZQUEwQztRQUMzRCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQzdDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQTtRQUNyQixPQUFPLElBQUksQ0FBQTtJQUNiLENBQUM7SUFFRCxjQUFjO1FBQ1osTUFBTSxVQUFVLEdBQUcsdUJBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDbEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUE7SUFDdkMsQ0FBQztJQUVELGdCQUFnQixDQUFDLFFBQTZCLEVBQUU7UUFDOUMsT0FBTyxLQUFLLENBQUE7SUFDZCxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUNuQixDQUFDO0NBQ0Y7QUFyQ0QsOENBcUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHRodW5rIGZyb20gJ3JlZHV4LXRodW5rJ1xuaW1wb3J0IHtcbiAgU3RvcmUsXG4gIGNyZWF0ZVN0b3JlLFxuICBhcHBseU1pZGRsZXdhcmUsXG4gIGNvbWJpbmVSZWR1Y2VycyxcbiAgUmVkdWNlclxufSBmcm9tICdyZWR1eCdcbmltcG9ydCB7IElSZWR1eFByb2Nlc3NTdG9yZSB9IGZyb20gJy4vaW50ZXJmYWNlcy9JUmVkdXhQcm9jZXNzU3RvcmUnXG5pbXBvcnQgeyBJUmVkdXhQcm9jZXNzR3JvdXAgfSBmcm9tICcuL2ludGVyZmFjZXMvSVJlZHV4UHJvY2Vzc0dyb3VwJ1xuaW1wb3J0IHsgUmVkdXhQcm9jZXNzQWN0aW9uIH0gZnJvbSAnLi90eXBlcy9SZWR1eFByb2Nlc3MnXG5cbmV4cG9ydCBjbGFzcyBSZWR1eFByb2Nlc3NTdG9yZSBpbXBsZW1lbnRzIElSZWR1eFByb2Nlc3NTdG9yZSB7XG4gIHByb3RlY3RlZCBzdG9yZTogU3RvcmU8YW55LCBSZWR1eFByb2Nlc3NBY3Rpb248YW55Pj5cbiAgcHJvdGVjdGVkIHByb2Nlc3NlczogUmVjb3JkPFxuICAgIHN0cmluZyxcbiAgICBSZWR1Y2VyPGFueSwgUmVkdXhQcm9jZXNzQWN0aW9uPGFueT4+XG4gID4gPSB7fVxuXG4gIGNvbnN0cnVjdG9yKG1pZGRsZXdhcmVzOiBhbnlbXSA9IFtdKSB7XG4gICAgY29uc3QgbWlkZGxld2FyZSA9IGFwcGx5TWlkZGxld2FyZSh0aHVuaywgLi4ubWlkZGxld2FyZXMpXG4gICAgdGhpcy5faW50ZXJuYWxSZWR1Y2VyID0gdGhpcy5faW50ZXJuYWxSZWR1Y2VyLmJpbmQodGhpcylcbiAgICB0aGlzLnN0b3JlID0gY3JlYXRlU3RvcmUodGhpcy5faW50ZXJuYWxSZWR1Y2VyLCBtaWRkbGV3YXJlKVxuICB9XG5cbiAgYWRkUHJvY2Vzc0dyb3VwKHByb2Nlc3NHcm91cDogSVJlZHV4UHJvY2Vzc0dyb3VwPGFueSwgYW55Pik6IHRoaXMge1xuICAgIHRoaXMucHJvY2Vzc2VzW3Byb2Nlc3NHcm91cC5ncm91cE5hbWVdID0gcHJvY2Vzc0dyb3VwLmdldFJlZHVjZXIoKVxuICAgIHRoaXMuX3VwZGF0ZVJlZHVjZXIoKVxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuICByZW1vdmVQcm9jZXNzR3JvdXAocHJvY2Vzc0dyb3VwOiBJUmVkdXhQcm9jZXNzR3JvdXA8YW55LCBhbnk+KTogdGhpcyB7XG4gICAgZGVsZXRlIHRoaXMucHJvY2Vzc2VzW3Byb2Nlc3NHcm91cC5ncm91cE5hbWVdXG4gICAgdGhpcy5fdXBkYXRlUmVkdWNlcigpXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIF91cGRhdGVSZWR1Y2VyKCkge1xuICAgIGNvbnN0IG5ld1JlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnModGhpcy5wcm9jZXNzZXMpXG4gICAgdGhpcy5zdG9yZS5yZXBsYWNlUmVkdWNlcihuZXdSZWR1Y2VyKVxuICB9XG5cbiAgX2ludGVybmFsUmVkdWNlcihzdGF0ZTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9KSB7XG4gICAgcmV0dXJuIHN0YXRlXG4gIH1cblxuICBnZXRTdG9yZSgpIHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZVxuICB9XG59XG4iXX0=